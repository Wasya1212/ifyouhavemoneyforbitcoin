{"version":3,"sources":["utils/data-helpers.js","components/Header.js","components/Footer.js","components/Trade.js","App.js","serviceWorker.js","index.js"],"names":["createDataPoint","data","time","arguments","length","undefined","Date","now","magnitude","AppHeader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","startTrade","react_default","a","createElement","className","href","src","alt","onClick","user","money","bitcoins_count","username","Component","Footer","tradeOptions","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","_default","changeTradeType","setState","bitcoin","cashOut","state","handleBitcoinInput","e","currentTarget","value","handleMoneyInput","buyBitcoin","preventDefault","_React$createElement","lib_default","isOpen","style","parseFloat","toFixed","cost","onSubmit","handleSubmit","onChange","placeholder","type","defineProperty","closeTradeModal","startedMoney","Highcharts","setOptions","chart","height","App","alert","assign","closeModal","showModal","updateLiveData","bind","assertThisInitialized","handleStartLiveUpdate","handleStopLiveUpdate","profit","name","fullName","grow_vector","liveUpdate","modal","_this2","axios","method","url","headers","Content-Type","then","_ref","currentMoney","bitcoinsCount","bitcoinPrice","calculateProfit","toAdd","newData","slice","push","addDataPoint","catch","err","console","error","window","setInterval","clearInterval","_this$state","Trade_default","ref","Header","HighchartsChart","Chart","Title","concat","Legend","Tooltip","valueSuffix","XAxis","YAxis","LineSeries","withHighcharts","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.439e34a1.chunk.js","sourcesContent":["export const createDataPoint = (data, time = Date.now(), magnitude = 1000, offset = 0) => {\r\n  return [\r\n    time + offset * magnitude,\r\n    data\r\n  ];\r\n};\r\n\r\nexport const addDataPoint = (data, toAdd) => {\r\n  if (!toAdd) toAdd = createDataPoint(100);\r\n  const newData = data.slice(0); // Clone\r\n  newData.push(toAdd);\r\n  return newData;\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nclass AppHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  startTrade = () => {\r\n    this.props.startTrade();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"App-header\">\r\n        <article className=\"App-header__App-logo\">\r\n          <a href=\"/\"><img src=\"/logo.png\" alt=\"logo\"/></a>\r\n        </article>\r\n        <article className=\"App-header__App-user\">\r\n          <div className=\"App-user-profile\">\r\n            <div className=\"App-user-profile__start-trade\">\r\n              <button className=\"btn btn-trading\" onClick={this.startTrade}>Trade</button>\r\n            </div>\r\n            <div className=\"App-user-profile__money dolar\">{this.props.user.money}</div>\r\n            <div className=\"App-user-profile__bitcoins bitcoin\">{this.props.user.bitcoins_count}</div>\r\n            <div className=\"App-user-profile__info\">\r\n              <div className=\"App-user-profile__picture\">\r\n                <a href=\"/\"><img src=\"/avatar.png\" alt=\"avatar\"/></a>\r\n              </div>\r\n              <div className=\"App-user-profile__username\">\r\n                <a href=\"/\"><span>{this.props.user.username}</span></a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </article>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppHeader;\r\n","import React, { Component } from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <span className=\"copyright\">© Copyright 2018. All rights reserved</span>\r\n      <span className=\"author\">Designed & produced by Wasya1212</span>\r\n    </footer>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nconst tradeOptions = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\nexport default class extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cashOut: false,\r\n      money: 0,\r\n      bitcoin: 0\r\n    };\r\n  }\r\n\r\n  handleSubmit (e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  changeTradeType = () => {\r\n    this.setState({\r\n      money: 0,\r\n      bitcoin: 0\r\n    });\r\n    this.setState({ cashOut: !this.state.cashOut });\r\n  }\r\n\r\n  handleBitcoinInput = e => {\r\n    this.setState({\r\n      money: 0,\r\n      bitcoin: 0\r\n    });\r\n    this.setState({ money: e.currentTarget.value || 0 });\r\n  }\r\n\r\n  handleMoneyInput = e => {\r\n    this.setState({\r\n      money: 0,\r\n      bitcoin: 0\r\n    });\r\n    this.setState({ bitcoin: e.currentTarget.value || 0 });\r\n  }\r\n\r\n  buyBitcoin = () => {\r\n    this.setState({\r\n      money: 0,\r\n      bitcoin: 0\r\n    });\r\n    this.props.buyBitcoin(this.state.bitcoin);\r\n  }\r\n\r\n  cashOut = () => {\r\n    this.setState({\r\n      money: 0,\r\n      bitcoin: 0\r\n    });\r\n    this.props.cashOut(this.state.money);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal isOpen={this.props.isOpen} style={tradeOptions}>\r\n        {this.state.cashOut && (\r\n          <div className=\"App-trade\">\r\n            <h2>Cash out</h2>\r\n            <p className=\"trade-currency-count dolar\">{this.props.user.money} → {(parseFloat(this.props.user.money) + parseFloat(this.state.money)).toFixed(2)}</p>\r\n            <p className=\"trade-currency-count bitcoin\">{this.props.user.bitcoins_count} → {(parseFloat(this.props.user.bitcoins_count) - parseFloat(this.state.money / this.props.bitcoin.cost)).toFixed(8)}</p>\r\n            <button className=\"btn btn-change\" onClick={this.changeTradeType}>Buy Bitcoin</button>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <input onChange={this.handleBitcoinInput} placeholder=\"Enter value of dollars...\" type=\"number\" />\r\n            </form>\r\n            <div className=\"App-trade__control\">\r\n              <button className=\"btn btn-confirm\" onClick={this.cashOut}>Confirm</button>\r\n              <button className=\"btn btn-confirm\" className=\"btn btn-close\" onClick={this.props.closeTradeModal}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {!this.state.cashOut && (\r\n          <div className=\"App-trade\">\r\n            <h2>Buy Bitcoin</h2>\r\n            <p className=\"trade-currency-count dolar\">{this.props.user.money} → {(this.props.user.money - (this.state.bitcoin * this.props.bitcoin.cost)).toFixed(2)}</p>\r\n            <p className=\"trade-currency-count bitcoin\">{this.props.user.bitcoins_count} → {parseFloat(this.state.bitcoin) + parseFloat(this.props.user.bitcoins_count)}</p>\r\n            <button className=\"btn btn-change\" onClick={this.changeTradeType}>Cash out</button>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <input onChange={this.handleMoneyInput} placeholder=\"Enter value of bitcoins...\" type=\"number\" />\r\n            </form>\r\n            <div className=\"App-trade__control\">\r\n              <button className=\"btn btn-confirm\" onClick={this.buyBitcoin}>Confirm</button>\r\n              <button className=\"btn btn-close\" onClick={this.props.closeTradeModal}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport Highcharts from 'highcharts';\nimport {\n  HighchartsChart,\n  Chart,\n  withHighcharts,\n  XAxis, YAxis, Title,\n  Legend,\n  LineSeries,\n  Tooltip\n} from 'react-jsx-highcharts';\nimport { addDataPoint, createDataPoint } from './utils/data-helpers';\nimport AppHeader from './components/Header';\nimport AppFooter from './components/Footer';\nimport AppTrade from './components/Trade';\nimport './sass/index.sass';\n\nconst maxTablePoints = 50;\nconst startedMoney = 100000;\n\nHighcharts.setOptions({\n  chart: {\n    height: (9 / 16 * 70) + '%'\n  }\n});\n\nconst calculateProfit = (startedMoney, currentMoney, bitcoinsCount, bitcoinPrice) => {\n  return ((parseFloat(currentMoney) + (bitcoinsCount * bitcoinPrice)) - startedMoney).toFixed(2);\n}\n\nclass App extends Component {\n\n  constructor (props) {\n    super(props);\n    this.updateLiveData = this.updateLiveData.bind(this);\n    this.handleStartLiveUpdate = this.handleStartLiveUpdate.bind(this);\n    this.handleStopLiveUpdate = this.handleStopLiveUpdate.bind(this);\n\n    this.state = {\n      user: { username: 'Some User', money: startedMoney, bitcoins_count: 0, profit: 0 },\n      bitcoin: { name: 'BTCUSD', fullName: 'Bitcoin', cost: 0, grow_vector: false },\n      data: [],\n      liveUpdate: false,\n      isOpen: false\n    };\n\n    this.modal = null;\n  }\n\n  componentDidMount () {\n    this.handleStartLiveUpdate();\n  }\n\n  updateLiveData () {\n    const { data } = this.state;\n\n    axios({\n      method: 'post',\n      url: '/',\n      data: { time: Date.now() },\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    })\n    .then(({ data: bitcoin }) => {\n      this.setState({\n        bitcoin: Object.assign(this.state.bitcoin, {\n          cost: bitcoin.cost,\n          grow_vector: bitcoin.cost - this.state.bitcoin.cost >= 0 ? true : false}),\n        user: Object.assign(this.state.user, { profit: calculateProfit(startedMoney, this.state.user.money, this.state.user.bitcoins_count, bitcoin.cost) })\n      });\n      return bitcoin.cost\n    })\n    .then(bitcoin => {\n      this.setState({\n        data: addDataPoint(data, createDataPoint(bitcoin))\n      });\n    })\n    .then(() => {\n      if (this.state.data.length > maxTablePoints) {\n        this.setState({\n          data: this.state.data.slice(1)\n        });\n      }\n    })\n    .catch(err => {\n      console.error(err);\n    });\n  }\n\n  handleStartLiveUpdate (e) {\n    e && e.preventDefault();\n    this.setState({\n      liveUpdate: window.setInterval(this.updateLiveData, 2000)\n    });\n  }\n\n  handleStopLiveUpdate (e) {\n    e.preventDefault();\n    window.clearInterval(this.state.liveUpdate);\n    this.setState({\n      liveUpdate: false\n    });\n  }\n\n  buyBitcoin = bitcoins_count => {\n    if (bitcoins_count * this.state.bitcoin.cost > this.state.user.money) {\n      alert(\"Not enaught of money!\");\n      return;\n    }\n\n    this.setState({\n      user: Object.assign(this.state.user, {\n        money: parseFloat((this.state.user.money - (bitcoins_count * this.state.bitcoin.cost)).toFixed(2)),\n        bitcoins_count: (parseFloat(this.state.user.bitcoins_count) + parseFloat(bitcoins_count)).toFixed(8)\n      })\n    });\n    this.closeModal();\n  }\n\n  cashOut = money => {\n    if (this.state.user.bitcoins_count - (money / this.state.bitcoin.cost) < 0) {\n      alert(\"Not enaught of Bitcoins!\");\n      return;\n    }\n\n    this.setState({\n      user: Object.assign(this.state.user, {\n        bitcoins_count: (this.state.user.bitcoins_count - parseFloat(money / this.state.bitcoin.cost)).toFixed(8),\n        money: (parseFloat(this.state.user.money) + parseFloat(money)).toFixed(2)\n      })\n    });\n    this.closeModal();\n  }\n\n  showModal = () => {\n    this.setState({\n      isOpen: true\n    });\n  }\n\n  closeModal = () => {\n    this.setState({\n      isOpen: false\n    });\n  }\n\n  render() {\n    const { data, liveUpdate } = this.state;\n\n    return (\n      <div className=\"app\">\n        <AppTrade user={this.state.user} bitcoin={this.state.bitcoin} isOpen={this.state.isOpen} closeTradeModal={this.closeModal} buyBitcoin={this.buyBitcoin} cashOut={this.cashOut} ref=\"modal\" />\n\n        <AppHeader user={this.state.user} startTrade={this.showModal} />\n\n        <section className=\"App-crypto\">\n          <div className=\"App-crypto__user-profit dolar\">You earned: <strong>{this.state.user.profit}</strong></div>\n          {!this.state.bitcoin.grow_vector && (\n            <div className=\"grow-vector grow-vector-down\">↓↓↓</div>\n          )}\n          {this.state.bitcoin.grow_vector && (\n            <div className=\"grow-vector grow-vector-up\">↑↑↑</div>\n          )}\n        </section>\n\n        <HighchartsChart>\n          <Chart />\n\n          <Title>{`${this.state.bitcoin.name} Course: ${this.state.bitcoin.cost}`}</Title>\n\n          <Legend>\n            <Legend.Title>Legend</Legend.Title>\n          </Legend>\n\n          <Tooltip valueSuffix=\" USD\" />\n\n          <XAxis type=\"datetime\">\n            <XAxis.Title>Time</XAxis.Title>\n          </XAxis>\n\n          <YAxis>\n            <YAxis.Title>Pressure (m)</YAxis.Title>\n            <LineSeries name=\"Bitcoin\" data={data} />\n          </YAxis>\n        </HighchartsChart>\n\n        <div>\n          {!this.state.liveUpdate && (\n            <button className=\"btn btn-success\" onClick={this.handleStartLiveUpdate}>Live update</button>\n          )}\n          {this.state.liveUpdate && (\n            <button className=\"btn btn-danger\" onClick={this.handleStopLiveUpdate}>Stop update</button>\n          )}\n        </div>\n\n        <AppFooter />\n\n      </div>\n    );\n  }\n}\n\nexport default withHighcharts(App, Highcharts);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}